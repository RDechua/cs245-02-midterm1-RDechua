Consider the following two functions, func1 and func2, that both print partial sums of the given array of integers.
A partial sum at index i is a sum of all elements of the array from index 0 to index i.

Example: If the array is {1, 3, 10, 4}, then the partial sums will be

1
4
14
18

Give Theta of the running time (as a function of n, where n is the length of the array)
for each of the functions func1 and func2, and provide an explanation.
Explain which of the two implementations is faster for solving this problem.

public static void func1(int[] arr) {
    int n = arr.length;
    for (int i = 0; i < n; i++) {
          int partialSum = 0;
          for (int j = 0; j <= i; j++) {
               partialSum += arr[j];
          }
         System.out.println(partialSum);
    }
}

public static void func2(int[] arr) {
        int n = arr.length;
        int[] sums = new int[n];
        int partialSum = 0;
        for (int i = 0; i < n; i++) {
              partialSum += arr[i];
              sums[i] = partialSum;
        }
        for (int k = 0; k < n; k++) {
             System.out.println(sums[k]);
        }
}
(a) Running time (Theta) of func 1 (1 pt = 0.3pt answer + 0.7pt explanation)

(b) Running time (Theta) of func 2 (0.5pt = 0.2pt answer + 0.3pt explanation)

(c) Which of the two functions is faster and why? (0.5 pt)

You may type your answers on Canvas, or  write your solution on paper and submit it to the instructor at the end of the exam.
You may also type your answer here and commit&push this file to Github.